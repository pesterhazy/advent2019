1575191056690:(defn fuel [mass] (-> mass (/ 3) (- 2)))
1575191065700:(fuel 12)
1575191079971:(fuel 14)
1575191092570:(doc div)
1575191095621:(clojure.repl/doc div)
1575191102463:(clojure.repl/doc mod)
1575191113931:(clojure.repl/doc /)
1575191131422:(defn fuel [mass] (-> mass (/ 3) Math/floor (- 2)))
1575191137114:(fuel 14)
1575191154155:"anke"
1575191157346:(+ 1 2)
1575191177948:(fuel 100756)
1575191235384:(->> (clojure.java.io/reader "inputs/1.txt") line-seq)
1575191291861:(->> (clojure.java.io/reader "inputs/1.txt") line-seq (map #(Long/parseLong %)))
1575191589091:(clojure.repl/doc line-seq)
1575191755155:(odd? 5)
1575191761290:(odd? 6)
1575191819206:(clojure.repl/doc odd?)
1575191953913:(odd? 5)
1575192065109:(map odd? [5 6 7])
1575192290067:(def numbers (->> (clojure.java.io/reader "inputs/1.txt") line-seq (map #(Long/parseLong %))))
1575192297280:numbers
1575192450790:(map fuel numbers)
1575192558132:(->> (map fuel numbers) (apply +))
1575192827801:(require 'advent.puzzle01)
1575192835188:(advent.puzzle01/result)
1575192880178:(require 'advent.puzzle01 :reload)
1575192881563:(advent.puzzle01/result)
1575193152106:(require 'advent.puzzle01 :reload)
1575193189227:(in-ns 'advent.puzzle01)
1575193219353:(->> (iterate fuel 966) (take 20))
1575193232211:(->> (iterate fuel 966) (take-while pos?))
1575193242783:(->> (iterate fuel 966) (take-while pos?) (apply +))
1575193253603:(->> (iterate fuel 1969) (take-while pos?) (apply +))
1575193275702:(->> (iterate fuel 1969) (take-while pos?))
1575193292573:(->> (iterate fuel 1969) (take-while pos?) (apply +))
1575193316375:(->> (iterate fuel 1969) (drop 1) (take-while pos?) (apply +))
1575193379918:(require 'advent.puzzle01 :reload)
1575193387048:(solution-2)
